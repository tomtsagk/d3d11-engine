name: Create Build

on:
  push:
    branches:
      - master

env:
  project_name: d3d11_project

jobs:
  build_windows:
    runs-on: windows-latest
    steps:
    - name: checkout
      uses: actions/checkout@v1
    # Decode the base 64 encoded pfx and save the Signing_Certificate
    - name: Decode the pfx
      run: |
        $pfx_cert_byte = [System.Convert]::FromBase64String("${{ secrets.BASE64_ENCODED_PFX }}")
        $certificatePath = Join-Path -Path ./ -ChildPath ${{ env.project_name }}_TemporaryKey.pfx
        [IO.File]::WriteAllBytes("$certificatePath", $pfx_cert_byte)
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1.1
    - name: Build app for release
      run: msbuild "$env:project_name.vcxproj" /p:AppxBundlePlatforms="x86|x64" /p:Configuration=Release /p:AppxBundle=Always /p:GenerateAppxPackageOnBuild=true
      env:
        Appx_Bundle: Never
        Appx_Bundle_Platforms: x64
        Appx_Package_Build_Mode: SideloadOnly
        Appx_Package_Dir: Packages\
        Configuration: Release
    - name: Sign
      run: |
        ls "C:\Program Files (x86)\Windows Kits\10"
        $signtool = "C:\Program Files (x86)\Windows Kits\10\App Certification Kit\signtool.exe"
        & $signtool sign /fd sha256 /a /f ${{ env.project_name }}_TemporaryKey.pfx /p ${{ secrets.PFX_PASSWORD }} AppPackages/d3d11_project/d3d11_project_1.0.0.0_Test/d3d11_project_1.0.0.0_x86_x64.msixbundle
    - name: Upload build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: app
        path: AppPackages/d3d11_project/d3d11_project_1.0.0.0_Test
    # Create the unpackaged app
    - name: Build unpackaged app
      run: msbuild "$env:project_name.vcxproj" /t:Publish /p:WindowsPackageType=None /p:Configuration=Release /p:Platform=x64
      env:
        Configuration: Release
    - name: Create ZIP of unpackaged app
      run: Compress-Archive x64/Release/${{ env.project_name }}/* '${{ env.project_name }}-unpackaged-0.${{ github.run_number }}.${{ github.run_attempt }}.0.zip'
    - name: Upload unpackaged app
      uses: actions/upload-artifact@v2
      with:
        name: unpackaged_app
        path: '${{ env.project_name }}-unpackaged-0.${{ github.run_number }}.${{ github.run_attempt }}.0.zip'
    - name: display
      shell: bash
      run: |
        ls -R

#run: msbuild "$env:project_name.vcxproj" /p:AppxBundlePlatforms="$env:Appx_Bundle_Platforms" /p:Configuration=$env:Configuration /p:UapAppxPackageBuildMode=$env:Appx_Package_Build_Mode /p:AppxBundle=$env:Appx_Bundle /p:PackageCertificateKeyFile=${{ env.project_name }}_TemporaryKey.pfx /p:AppxPackageDir="$env:Appx_Package_Dir" /p:GenerateAppxPackageOnBuild=true
